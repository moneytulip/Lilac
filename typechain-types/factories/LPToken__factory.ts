/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LPToken, LPTokenInterface } from "../LPToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506111c7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100e65760003560e01c806306fdde03146100eb578063095ea7b31461010957806318160ddd1461012c57806323b872dd1461013e578063313ce56714610151578063395093511461016057806340c10f191461017357806342966c68146101885780634cd88b761461019b57806370a08231146101ae578063715018a6146101d757806379cc6790146101df5780638da5cb5b146101f257806395d89b4114610212578063a457c2d71461021a578063a9059cbb1461022d578063dd62ed3e14610240578063f2fde38b14610253575b600080fd5b6100f3610266565b6040516101009190610e27565b60405180910390f35b61011c610117366004610e98565b6102f8565b6040519015158152602001610100565b6035545b604051908152602001610100565b61011c61014c366004610ec2565b610310565b60405160128152602001610100565b61011c61016e366004610e98565b610334565b610186610181366004610e98565b610373565b005b610186610196366004610efe565b6103ff565b61011c6101a9366004610fb9565b61040c565b6101306101bc36600461101c565b6001600160a01b031660009081526033602052604090205490565b6101866104e8565b6101866101ed366004610e98565b610523565b6101fa610538565b6040516001600160a01b039091168152602001610100565b6100f3610547565b61011c610228366004610e98565b610556565b61011c61023b366004610e98565b6105e8565b61013061024e36600461103e565b6105f6565b61018661026136600461101c565b610621565b60606036805461027590611071565b80601f01602080910402602001604051908101604052809291908181526020018280546102a190611071565b80156102ee5780601f106102c3576101008083540402835291602001916102ee565b820191906000526020600020905b8154815290600101906020018083116102d157829003601f168201915b5050505050905090565b6000336103068185856106be565b5060019392505050565b60003361031e8582856107e3565b61032985858561085d565b506001949350505050565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909190610306908290869061036e9087906110c2565b6106be565b3361037c610538565b6001600160a01b0316146103ab5760405162461bcd60e51b81526004016103a2906110da565b60405180910390fd5b806103f15760405162461bcd60e51b815260206004820152601660248201527504c50546f6b656e3a2063616e6e6f74206d696e7420360541b60448201526064016103a2565b6103fb8282610a24565b5050565b6104093382610afd565b50565b60008054610100900460ff166104285760005460ff161561042c565b303b155b61048f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103a2565b600054610100900460ff161580156104b1576000805461ffff19166101011790555b6104b9610c42565b6104c38484610c69565b6104cb610cb7565b6001915080156104e1576000805461ff00191690555b5092915050565b336104f1610538565b6001600160a01b0316146105175760405162461bcd60e51b81526004016103a2906110da565b6105216000610ce3565b565b61052e8233836107e3565b6103fb8282610afd565b6097546001600160a01b031690565b60606037805461027590611071565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909190838110156105db5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103a2565b61032982868684036106be565b60003361030681858561085d565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b3361062a610538565b6001600160a01b0316146106505760405162461bcd60e51b81526004016103a2906110da565b6001600160a01b0381166106b55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103a2565b61040981610ce3565b6001600160a01b0383166107205760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103a2565b6001600160a01b0382166107815760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103a2565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006107ef84846105f6565b90506000198114610857578181101561084a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103a2565b61085784848484036106be565b50505050565b6001600160a01b0383166108c15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103a2565b6001600160a01b0382166109235760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103a2565b61092e838383610d35565b6001600160a01b038316600090815260336020526040902054818110156109a65760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103a2565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906109dd9084906110c2565b92505081905550826001600160a01b0316846001600160a01b031660008051602061117283398151915284604051610a1791815260200190565b60405180910390a3610857565b6001600160a01b038216610a7a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103a2565b610a8660008383610d35565b8060356000828254610a9891906110c2565b90915550506001600160a01b03821660009081526033602052604081208054839290610ac59084906110c2565b90915550506040518181526001600160a01b038316906000906000805160206111728339815191529060200160405180910390a35050565b6001600160a01b038216610b5d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103a2565b610b6982600083610d35565b6001600160a01b03821660009081526033602052604090205481811015610bdd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103a2565b6001600160a01b0383166000908152603360205260408120838303905560358054849290610c0c90849061110f565b90915550506040518281526000906001600160a01b03851690600080516020611172833981519152906020016107d6565b505050565b600054610100900460ff166105215760405162461bcd60e51b81526004016103a290611126565b600054610100900460ff16610c905760405162461bcd60e51b81526004016103a290611126565b8151610ca3906036906020850190610d8e565b508051610c3d906037906020840190610d8e565b600054610100900460ff16610cde5760405162461bcd60e51b81526004016103a290611126565b610521335b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216301415610c3d5760405162461bcd60e51b815260206004820152601e60248201527f4c50546f6b656e3a2063616e6e6f742073656e6420746f20697473656c66000060448201526064016103a2565b828054610d9a90611071565b90600052602060002090601f016020900481019282610dbc5760008555610e02565b82601f10610dd557805160ff1916838001178555610e02565b82800160010185558215610e02579182015b82811115610e02578251825591602001919060010190610de7565b50610e0e929150610e12565b5090565b5b80821115610e0e5760008155600101610e13565b600060208083528351808285015260005b81811015610e5457858101830151858201604001528201610e38565b81811115610e66576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610e9357600080fd5b919050565b60008060408385031215610eab57600080fd5b610eb483610e7c565b946020939093013593505050565b600080600060608486031215610ed757600080fd5b610ee084610e7c565b9250610eee60208501610e7c565b9150604084013590509250925092565b600060208284031215610f1057600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610f3e57600080fd5b81356001600160401b0380821115610f5857610f58610f17565b604051601f8301601f19908116603f01168101908282118183101715610f8057610f80610f17565b81604052838152866020858801011115610f9957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610fcc57600080fd5b82356001600160401b0380821115610fe357600080fd5b610fef86838701610f2d565b9350602085013591508082111561100557600080fd5b5061101285828601610f2d565b9150509250929050565b60006020828403121561102e57600080fd5b61103782610e7c565b9392505050565b6000806040838503121561105157600080fd5b61105a83610e7c565b915061106860208401610e7c565b90509250929050565b600181811c9082168061108557607f821691505b602082108114156110a657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156110d5576110d56110ac565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015611121576111216110ac565b500390565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220a8c9b9ea409887c48e1fce664a807993a5cc4470dd27be036163d4871fe10ca164736f6c63430008090033";

type LPTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LPTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LPToken__factory extends ContractFactory {
  constructor(...args: LPTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "LPToken";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LPToken> {
    return super.deploy(overrides || {}) as Promise<LPToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LPToken {
    return super.attach(address) as LPToken;
  }
  connect(signer: Signer): LPToken__factory {
    return super.connect(signer) as LPToken__factory;
  }
  static readonly contractName: "LPToken";
  public readonly contractName: "LPToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LPTokenInterface {
    return new utils.Interface(_abi) as LPTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LPToken {
    return new Contract(address, _abi, signerOrProvider) as LPToken;
  }
}

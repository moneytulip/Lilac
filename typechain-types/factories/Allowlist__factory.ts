/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Allowlist, AllowlistInterface } from "../Allowlist";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "NewMerkleRoot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "accountLimit",
        type: "uint256",
      },
    ],
    name: "PoolAccountLimit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "poolCap",
        type: "uint256",
      },
    ],
    name: "PoolCap",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
    ],
    name: "getPoolAccountLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
    ],
    name: "getPoolCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isAccountVerified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accountLimit",
        type: "uint256",
      },
    ],
    name: "setPoolAccountLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "poolCap",
        type: "uint256",
      },
    ],
    name: "setPoolCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
    ],
    name: "updateMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "verifyAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a7a380380610a7a83398101604081905261002f9161012b565b610038336100db565b60018190556000808052600260209081526254dd1e7fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b8190556040519081527f87a8ed40e9bdf0609701a63c1db365301c953ffa230215ac92903d4af963e7cd910160405180910390a26040518181527f2f4f633f2174c8fce0ce6b22ea3cc69675584063adfd3d25e4dc3fd50cb631fc9060200160405180910390a150610144565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561013d57600080fd5b5051919050565b610927806101536000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80638da5cb5b11610081578063aed59dcc1161005b578063aed59dcc146101ad578063eb88f73e146101c0578063f2fde38b146101e957600080fd5b80638da5cb5b14610156578063945f1838146101715780639c8d8dea1461019a57600080fd5b80634a982176116100b25780634a982176146100ff578063715018a6146101125780638ba209b61461011a57600080fd5b80632eb4a7ab146100ce5780634783f0ef146100ea575b600080fd5b6100d760015481565b6040519081526020015b60405180910390f35b6100fd6100f83660046107b2565b6101fc565b005b6100fd61010d3660046107e7565b610296565b6100fd61039f565b610146610128366004610811565b6001600160a01b031660009081526004602052604090205460ff1690565b60405190151581526020016100e1565b6000546040516001600160a01b0390911681526020016100e1565b6100d761017f366004610811565b6001600160a01b031660009081526002602052604090205490565b6101466101a836600461082c565b610405565b6100fd6101bb3660046107e7565b6104e1565b6100d76101ce366004610811565b6001600160a01b031660009081526003602052604090205490565b6100fd6101f7366004610811565b6105de565b6000546001600160a01b0316331461025b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60018190556040518181527f2f4f633f2174c8fce0ce6b22ea3cc69675584063adfd3d25e4dc3fd50cb631fc9060200160405180910390a150565b6000546001600160a01b031633146102f05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610252565b6001600160a01b0382166103465760405162461bcd60e51b815260206004820152601960248201527f307830206973206e6f74206120706f6f6c2061646472657373000000000000006044820152606401610252565b6001600160a01b03821660008181526003602052604090819020839055517ff30f0cdb7dc669285a3f39e2b5869ad68e12f7e2dc2234f6976f090e92031f9e906103939084815260200190565b60405180910390a25050565b6000546001600160a01b031633146103f95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610252565b61040360006106c0565b565b600081156104bc576040516bffffffffffffffffffffffff19606086901b166020820152600090603401604051602081830303815290604052805190602001209050610488848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506001549150849050610728565b156104ba5750506001600160a01b0383166000908152600460205260409020805460ff191660019081179091556104da565b505b506001600160a01b03831660009081526004602052604090205460ff165b9392505050565b6000546001600160a01b0316331461053b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610252565b6001600160a01b0382166105915760405162461bcd60e51b815260206004820152601960248201527f307830206973206e6f74206120706f6f6c2061646472657373000000000000006044820152606401610252565b6001600160a01b03821660008181526002602052604090819020839055517f87a8ed40e9bdf0609701a63c1db365301c953ffa230215ac92903d4af963e7cd906103939084815260200190565b6000546001600160a01b031633146106385760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610252565b6001600160a01b0381166106b45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610252565b6106bd816106c0565b50565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600082610735858461073e565b14949350505050565b600081815b84518110156107aa576000858281518110610760576107606108b2565b602002602001015190508083116107865760008381526020829052604090209250610797565b600081815260208490526040902092505b50806107a2816108c8565b915050610743565b509392505050565b6000602082840312156107c457600080fd5b5035919050565b80356001600160a01b03811681146107e257600080fd5b919050565b600080604083850312156107fa57600080fd5b610803836107cb565b946020939093013593505050565b60006020828403121561082357600080fd5b6104da826107cb565b60008060006040848603121561084157600080fd5b61084a846107cb565b9250602084013567ffffffffffffffff8082111561086757600080fd5b818601915086601f83011261087b57600080fd5b81358181111561088a57600080fd5b8760208260051b850101111561089f57600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052603260045260246000fd5b60006000198214156108ea57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220f048572e3d5fa5577edfc9c87f6320c87db0433e671ff65713951807668dfbe764736f6c63430008090033";

type AllowlistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AllowlistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Allowlist__factory extends ContractFactory {
  constructor(...args: AllowlistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Allowlist";
  }

  deploy(
    merkleRoot_: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Allowlist> {
    return super.deploy(merkleRoot_, overrides || {}) as Promise<Allowlist>;
  }
  getDeployTransaction(
    merkleRoot_: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(merkleRoot_, overrides || {});
  }
  attach(address: string): Allowlist {
    return super.attach(address) as Allowlist;
  }
  connect(signer: Signer): Allowlist__factory {
    return super.connect(signer) as Allowlist__factory;
  }
  static readonly contractName: "Allowlist";
  public readonly contractName: "Allowlist";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AllowlistInterface {
    return new utils.Interface(_abi) as AllowlistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Allowlist {
    return new Contract(address, _abi, signerOrProvider) as Allowlist;
  }
}

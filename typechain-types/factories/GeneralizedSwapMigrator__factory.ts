/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GeneralizedSwapMigrator,
  GeneralizedSwapMigratorInterface,
} from "../GeneralizedSwapMigrator";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldPoolAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "newPoolAddress",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "oldPoolLPTokenAddress",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "newPoolLPTokenAddress",
            type: "address",
          },
          {
            internalType: "contract IERC20[]",
            name: "tokens",
            type: "address[]",
          },
        ],
        indexed: false,
        internalType: "struct GeneralizedSwapMigrator.MigrationData",
        name: "mData",
        type: "tuple",
      },
    ],
    name: "AddMigrationData",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "migrator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oldPoolAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldLPTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newLPTokenAmount",
        type: "uint256",
      },
    ],
    name: "Migrate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldPoolAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "newPoolAddress",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "oldPoolLPTokenAddress",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "newPoolLPTokenAddress",
            type: "address",
          },
          {
            internalType: "contract IERC20[]",
            name: "tokens",
            type: "address[]",
          },
        ],
        internalType: "struct GeneralizedSwapMigrator.MigrationData",
        name: "mData",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "overwrite",
        type: "bool",
      },
    ],
    name: "addMigrationData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "calls",
        type: "bytes[]",
      },
      {
        internalType: "bool",
        name: "revertOnFail",
        type: "bool",
      },
    ],
    name: "batch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldPoolAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
    ],
    name: "migrate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "migrationMap",
    outputs: [
      {
        internalType: "address",
        name: "newPoolAddress",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "oldPoolLPTokenAddress",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "newPoolLPTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "rescue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61196d8061007e6000396000f3fe60806040526004361061006b5760003560e01c80634fdf5d1d146100705780636f73133014610092578063715018a6146100b25780638da5cb5b146100c7578063d2423b51146100f2578063e36ad77e14610105578063f2fde38b1461017b578063fc22d0e51461019b575b600080fd5b34801561007c57600080fd5b5061009061008b3660046111b6565b6101c9565b005b34801561009e57600080fd5b506100906100ad36600461129e565b610296565b3480156100be57600080fd5b506100906107d8565b3480156100d357600080fd5b506100dc610813565b6040516100e991906113cb565b60405180910390f35b6100906101003660046113df565b610822565b34801561011157600080fd5b50610151610120366004611464565b60016020819052600091825260409091208054918101546002909101546001600160a01b0392831692918216911683565b604080516001600160a01b03948516815292841660208401529216918101919091526060016100e9565b34801561018757600080fd5b50610090610196366004611464565b6108f5565b3480156101a757600080fd5b506101bb6101b6366004611481565b610995565b6040519081526020016100e9565b336101d2610813565b6001600160a01b0316146102015760405162461bcd60e51b81526004016101f8906114b6565b60405180910390fd5b61029281836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161023191906113cb565b60206040518083038186803b15801561024957600080fd5b505afa15801561025d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028191906114eb565b6001600160a01b0385169190610c79565b5050565b3361029f610813565b6001600160a01b0316146102c55760405162461bcd60e51b81526004016101f8906114b6565b80610347576001600160a01b038381166000908152600160208190526040909120015416156103475760405162461bcd60e51b815260206004820152602860248201527f63616e6e6f74206f7665727772697465206578697374696e67206d6967726174604482015267696f6e206461746160c01b60648201526084016101f8565b60208201516001600160a01b031661039e5760405162461bcd60e51b815260206004820152601a60248201527906f6c64506f6f6c4c50546f6b656e41646472657373203d3d20360341b60448201526064016101f8565b60408201516001600160a01b03166103f55760405162461bcd60e51b815260206004820152601a60248201527906e6577506f6f6c4c50546f6b656e41646472657373203d3d20360341b60448201526064016101f8565b60005b60208160ff1610156106075760405162415c3360e91b815260ff821660048201526000906001600160a01b038616906382b866009060240160206040518083038186803b15801561044857600080fd5b505afa925050508015610478575060408051601f3d908101601f1916820190925261047591810190611504565b60015b6104a75760008260ff161161049f5760405162461bcd60e51b81526004016101f890611521565b5060006104aa565b90505b835160405162415c3360e91b815260ff841660048201526001600160a01b03909116906382b866009060240160206040518083038186803b1580156104ee57600080fd5b505afa92505050801561051e575060408051601f3d908101601f1916820190925261051b91810190611504565b60015b6105855760008260ff16116105455760405162461bcd60e51b81526004016101f890611521565b6001600160a01b03811615801561056357508360600151518260ff16145b61057f5760405162461bcd60e51b81526004016101f89061156c565b50610607565b806001600160a01b0316826001600160a01b03161480156105d7575084606001518360ff16815181106105ba576105ba6115a1565b60200260200101516001600160a01b0316826001600160a01b0316145b6105f35760405162461bcd60e51b81526004016101f89061156c565b5050806105ff816115cd565b9150506103f8565b506001600160a01b03808416600090815260016020818152604092839020865181549086166001600160a01b0319918216178255828801519382018054948716948216949094179093559286015160028401805491909516921691909117909255606084015180518593610682926003850192910190611127565b505050602082015160405163095ea7b360e01b81526001600160a01b039091169063095ea7b3906106bb908690600019906004016115ed565b602060405180830381600087803b1580156106d557600080fd5b505af11580156106e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070d9190611606565b5060005b8260600151518110156107915761075e836000015160008560600151848151811061073e5761073e6115a1565b60200260200101516001600160a01b0316610cd49092919063ffffffff16565b61077f83600001516000198560600151848151811061073e5761073e6115a1565b8061078981611623565b915050610711565b50826001600160a01b03167f3a4863f22c4536b6b3a7e8989396b0b2f9c10de870d877ec333df6cfec568d30836040516107cb919061163e565b60405180910390a2505050565b336107e1610813565b6001600160a01b0316146108075760405162461bcd60e51b81526004016101f8906114b6565b6108116000610de7565b565b6000546001600160a01b031690565b60005b828110156108ef5760008030868685818110610843576108436115a1565b905060200281019061085591906116be565b60405161086392919061170b565b600060405180830381855af49150503d806000811461089e576040519150601f19603f3d011682016040523d82523d6000602084013e6108a3565b606091505b5091509150811580156108b35750835b156108da576108c181610e37565b60405162461bcd60e51b81526004016101f89190611747565b505080806108e790611623565b915050610825565b50505050565b336108fe610813565b6001600160a01b0316146109245760405162461bcd60e51b81526004016101f8906114b6565b6001600160a01b0381166109895760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101f8565b61099281610de7565b50565b6001600160a01b0380841660009081526001602081815260408084208151608081018352815487168152938101548616848401526002810154909516838201526003850180548251818502810185019093528083529495869590936060860193929190830182828015610a3157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610a13575b5050509190925250505060208101519091506001600160a01b0316610a955760405162461bcd60e51b815260206004820152601a6024820152796d6967726174696f6e206973206e6f7420617661696c61626c6560301b60448201526064016101f8565b6020810151610aaf906001600160a01b0316333087610e9c565b6000856001600160a01b03166331cd52b0868460600151516001600160401b03811115610ade57610ade6111ef565b604051908082528060200260200182016040528015610b07578160200160208202803683370190505b506000196040518463ffffffff1660e01b8152600401610b29939291906117b5565b600060405180830381600087803b158015610b4357600080fd5b505af1158015610b57573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b7f91908101906117de565b9050600082600001516001600160a01b0316634d49e87d83876000196040518463ffffffff1660e01b8152600401610bb993929190611863565b602060405180830381600087803b158015610bd357600080fd5b505af1158015610be7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0b91906114eb565b6040840151909150610c27906001600160a01b03163383610c79565b60408051878152602081018390526001600160a01b0389169133917fd616b8856fa5febbdb06f07dd8d624380d02864619f3b796002f43bc36a4d1bc910160405180910390a3925050505b9392505050565b610ccf8363a9059cbb60e01b8484604051602401610c989291906115ed565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610ed4565b505050565b801580610d5d5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015610d2357600080fd5b505afa158015610d37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5b91906114eb565b155b610dc85760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016101f8565b610ccf8363095ea7b360e01b8484604051602401610c989291906115ed565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6060604482511015610e7c57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b60048201915081806020019051810190610e969190611888565b92915050565b6040516001600160a01b03808516602483015283166044820152606481018290526108ef9085906323b872dd60e01b90608401610c98565b6000610f29826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610fa69092919063ffffffff16565b805190915015610ccf5780806020019051810190610f479190611606565b610ccf5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101f8565b6060610fb58484600085610fbd565b949350505050565b60608247101561101e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101f8565b6001600160a01b0385163b6110755760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101f8565b600080866001600160a01b03168587604051611091919061191b565b60006040518083038185875af1925050503d80600081146110ce576040519150601f19603f3d011682016040523d82523d6000602084013e6110d3565b606091505b50915091506110e38282866110ee565b979650505050505050565b606083156110fd575081610c72565b82511561110d5782518084602001fd5b8160405162461bcd60e51b81526004016101f89190611747565b82805482825590600052602060002090810192821561117c579160200282015b8281111561117c57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611147565b5061118892915061118c565b5090565b5b80821115611188576000815560010161118d565b6001600160a01b038116811461099257600080fd5b600080604083850312156111c957600080fd5b82356111d4816111a1565b915060208301356111e4816111a1565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715611227576112276111ef565b60405290565b604051601f8201601f191681016001600160401b0381118282101715611255576112556111ef565b604052919050565b60006001600160401b03821115611276576112766111ef565b5060051b60200190565b801515811461099257600080fd5b803561129981611280565b919050565b6000806000606084860312156112b357600080fd5b83356112be816111a1565b92506020848101356001600160401b03808211156112db57600080fd5b90860190608082890312156112ef57600080fd5b6112f7611205565b8235611302816111a1565b815282840135611311816111a1565b818501526040830135611323816111a1565b604082015260608301358281111561133a57600080fd5b80840193505088601f84011261134f57600080fd5b8235915061136461135f8361125d565b61122d565b82815260059290921b8301840191848101908a84111561138357600080fd5b938501935b838510156113aa57843561139b816111a1565b82529385019390850190611388565b60608301525094506113c2925050506040850161128e565b90509250925092565b6001600160a01b0391909116815260200190565b6000806000604084860312156113f457600080fd5b83356001600160401b038082111561140b57600080fd5b818601915086601f83011261141f57600080fd5b81358181111561142e57600080fd5b8760208260051b850101111561144357600080fd5b6020928301955093505084013561145981611280565b809150509250925092565b60006020828403121561147657600080fd5b8135610c72816111a1565b60008060006060848603121561149657600080fd5b83356114a1816111a1565b95602085013595506040909401359392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156114fd57600080fd5b5051919050565b60006020828403121561151657600080fd5b8151610c72816111a1565b6020808252602b908201527f4661696c656420746f2067657420746f6b656e7320756e6465726c79696e672060408201526a2634b630b1903837b7b61760a91b606082015260800190565b6020808252601b908201527a11985a5b1959081d1bc81b585d18da081d1bdad95b9cc81b1a5cdd602a1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8114156115e4576115e46115b7565b60010192915050565b6001600160a01b03929092168252602082015260400190565b60006020828403121561161857600080fd5b8151610c7281611280565b6000600019821415611637576116376115b7565b5060010190565b6000602080835260a0830160018060a01b0380865116838601528083870151166040860152806040870151166060860152606086015160808087015282815180855260c0880191508583019450600092505b808310156116b257845184168252938501936001929092019190850190611690565b50979650505050505050565b6000808335601e198436030181126116d557600080fd5b8301803591506001600160401b038211156116ef57600080fd5b60200191503681900382131561170457600080fd5b9250929050565b8183823760009101908152919050565b60005b8381101561173657818101518382015260200161171e565b838111156108ef5750506000910152565b602081526000825180602084015261176681604085016020870161171b565b601f01601f19169190910160400192915050565b600081518084526020808501945080840160005b838110156117aa5781518752958201959082019060010161178e565b509495945050505050565b8381526060602082015260006117ce606083018561177a565b9050826040830152949350505050565b600060208083850312156117f157600080fd5b82516001600160401b0381111561180757600080fd5b8301601f8101851361181857600080fd5b805161182661135f8261125d565b81815260059190911b8201830190838101908783111561184557600080fd5b928401925b828410156110e35783518252928401929084019061184a565b606081526000611876606083018661177a565b60208301949094525060400152919050565b60006020828403121561189a57600080fd5b81516001600160401b03808211156118b157600080fd5b818401915084601f8301126118c557600080fd5b8151818111156118d7576118d76111ef565b6118ea601f8201601f191660200161122d565b915080825285602082850101111561190157600080fd5b61191281602084016020860161171b565b50949350505050565b6000825161192d81846020870161171b565b919091019291505056fea26469706673582212203cc2f0e504b7c5021fa823f7640ae81930195727c228066dd8e8efccc6ee779764736f6c63430008090033";

type GeneralizedSwapMigratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GeneralizedSwapMigratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GeneralizedSwapMigrator__factory extends ContractFactory {
  constructor(...args: GeneralizedSwapMigratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GeneralizedSwapMigrator";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GeneralizedSwapMigrator> {
    return super.deploy(overrides || {}) as Promise<GeneralizedSwapMigrator>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GeneralizedSwapMigrator {
    return super.attach(address) as GeneralizedSwapMigrator;
  }
  connect(signer: Signer): GeneralizedSwapMigrator__factory {
    return super.connect(signer) as GeneralizedSwapMigrator__factory;
  }
  static readonly contractName: "GeneralizedSwapMigrator";
  public readonly contractName: "GeneralizedSwapMigrator";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GeneralizedSwapMigratorInterface {
    return new utils.Interface(_abi) as GeneralizedSwapMigratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GeneralizedSwapMigrator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GeneralizedSwapMigrator;
  }
}

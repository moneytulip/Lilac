/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BaseBoringBatchable,
  BaseBoringBatchableInterface,
} from "../BaseBoringBatchable";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "calls",
        type: "bytes[]",
      },
      {
        internalType: "bool",
        name: "revertOnFail",
        type: "bool",
      },
    ],
    name: "batch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610413806100206000396000f3fe60806040526004361061001e5760003560e01c8063d2423b5114610023575b600080fd5b610036610031366004610193565b610038565b005b60005b8281101561012857600080308686858181106100595761005961021e565b905060200281019061006b9190610234565b604051610079929190610282565b600060405180830381855af49150503d80600081146100b4576040519150601f19603f3d011682016040523d82523d6000602084013e6100b9565b606091505b5091509150811580156100c95750835b15610113576100d78161012e565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010a91906102be565b60405180910390fd5b50508080610120906102f1565b91505061003b565b50505050565b606060448251101561017357505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6004820191508180602001905181019061018d9190610330565b92915050565b6000806000604084860312156101a857600080fd5b833567ffffffffffffffff808211156101c057600080fd5b818601915086601f8301126101d457600080fd5b8135818111156101e357600080fd5b8760208260051b85010111156101f857600080fd5b60209283019550935050840135801515811461021357600080fd5b809150509250925092565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261024b57600080fd5b83018035915067ffffffffffffffff82111561026657600080fd5b60200191503681900382131561027b57600080fd5b9250929050565b8183823760009101908152919050565b60005b838110156102ad578181015183820152602001610295565b838111156101285750506000910152565b60208152600082518060208401526102dd816040850160208701610292565b601f01601f19169190910160400192915050565b600060001982141561031357634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561034257600080fd5b815167ffffffffffffffff8082111561035a57600080fd5b818401915084601f83011261036e57600080fd5b8151818111156103805761038061031a565b604051601f8201601f19908116603f011681019083821181831017156103a8576103a861031a565b816040528281528760208487010111156103c157600080fd5b6103d2836020830160208801610292565b97965050505050505056fea2646970667358221220240d5fd0f6c5a9675e95f497194b6d8e69fc62bbc495a304e04979a33b0c948364736f6c63430008090033";

type BaseBoringBatchableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaseBoringBatchableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaseBoringBatchable__factory extends ContractFactory {
  constructor(...args: BaseBoringBatchableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BaseBoringBatchable";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BaseBoringBatchable> {
    return super.deploy(overrides || {}) as Promise<BaseBoringBatchable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BaseBoringBatchable {
    return super.attach(address) as BaseBoringBatchable;
  }
  connect(signer: Signer): BaseBoringBatchable__factory {
    return super.connect(signer) as BaseBoringBatchable__factory;
  }
  static readonly contractName: "BaseBoringBatchable";
  public readonly contractName: "BaseBoringBatchable";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseBoringBatchableInterface {
    return new utils.Interface(_abi) as BaseBoringBatchableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseBoringBatchable {
    return new Contract(address, _abi, signerOrProvider) as BaseBoringBatchable;
  }
}

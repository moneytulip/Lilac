/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RetroactiveVesting,
  RetroactiveVestingInterface,
} from "../RetroactiveVesting";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "startTimestamp_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [],
    name: "DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "verifyAndClaimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "vestedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "vestings",
    outputs: [
      {
        internalType: "bool",
        name: "isVerified",
        type: "bool",
      },
      {
        internalType: "uint120",
        name: "totalAmount",
        type: "uint120",
      },
      {
        internalType: "uint120",
        name: "released",
        type: "uint120",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051610e65380380610e6583398101604081905261002f91610165565b6001600160a01b03831661008a5760405162461bcd60e51b815260206004820152601660248201527f746f6b656e5f2063616e6e6f7420626520656d7074790000000000000000000060448201526064015b60405180910390fd5b8160001a60f81b7fff00000000000000000000000000000000000000000000000000000000000000166100ff5760405162461bcd60e51b815260206004820152601b60248201527f6d65726b6c65526f6f745f2063616e6e6f7420626520656d70747900000000006044820152606401610081565b8061014c5760405162461bcd60e51b815260206004820152601b60248201527f737461727454696d657374616d705f2063616e6e6f74206265203000000000006044820152606401610081565b6001600160a01b0390921660805260a05260c0526101a8565b60008060006060848603121561017a57600080fd5b83516001600160a01b038116811461019157600080fd5b602085015160409095015190969495509392505050565b60805160a05160c051610c736101f2600039600081816101760152818161027b01526105c801526000818160b001526103c901526000818161019d01526106b90152610c736000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063d279c1911161005b578063d279c191146100fa578063daf498631461010d578063e6fd48bc14610171578063fc0c546a1461019857600080fd5b80631be052891461008d5780632eb4a7ab146100ab578063384711cc146100d2578063935fe8c8146100e5575b600080fd5b6100986303bfc40081565b6040519081526020015b60405180910390f35b6100987f000000000000000000000000000000000000000000000000000000000000000081565b6100986100e0366004610a40565b6101d7565b6100f86100f3366004610a5b565b6102aa565b005b6100f8610108366004610a40565b61048c565b61014a61011b366004610a40565b60006020819052908152604090205460ff8116906001600160781b036101008204811691600160801b90041683565b6040805193151584526001600160781b0392831660208501529116908201526060016100a2565b6100987f000000000000000000000000000000000000000000000000000000000000000081565b6101bf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100a2565b6001600160a01b03811660009081526020819052604081205460ff166102445760405162461bcd60e51b815260206004820152601160248201527f6d7573742076657269667920666972737400000000000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b0382166000908152602081905260409020546102a4906001600160781b036101008204811691600160801b9004167f00000000000000000000000000000000000000000000000000000000000000006303bfc400610511565b92915050565b6000831180156102c057506001600160781b0383105b6103325760405162461bcd60e51b815260206004820152603860248201527f746f74616c416d6f756e742063616e6e6f742062652030206f72206c6172676560448201527f72207468616e206d61782075696e743132302076616c75650000000000000000606482015260840161023b565b6001600160a01b0384166000908152602081905260409020805460ff1661047c576040516bffffffffffffffffffffffff19606087901b166020820152603481018590526000906054016040516020818303038152906040528051906020012090506103f48484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508591506105749050565b6104405760405162461bcd60e51b815260206004820152601c60248201527f636f756c64206e6f7420766572696679206d65726b6c6550726f6f6600000000604482015260640161023b565b5080546001600160781b038516610100027fffffffffffffffffffffffffffffffff000000000000000000000000000000009091161760011781555b6104858561058c565b5050505050565b6001600160a01b03811661049d5750335b6001600160a01b03811660009081526020819052604090205460ff166105055760405162461bcd60e51b815260206004820152601160248201527f6d75737420766572696679206669727374000000000000000000000000000000604482015260640161023b565b61050e8161058c565b50565b6000428381101561052657600091505061056c565b60006105328583610afb565b9050600084821061054457508661055c565b8461054f838a610b12565b6105599190610b31565b90505b6105668782610afb565b93505050505b949350505050565b6000826105818584610732565b1490505b9392505050565b6001600160a01b0381166000908152602081905260408120805490916001600160781b03600160801b83048116926105f19161010090910416837f00000000000000000000000000000000000000000000000000000000000000006303bfc400610511565b905060006105ff8383610b53565b90506001600160781b03811061067d5760405162461bcd60e51b815260206004820152602960248201527f6e657752656c656173656420697320746f6f2062696720746f2062652063617360448201527f742075696e743132300000000000000000000000000000000000000000000000606482015260840161023b565b83547fff000000000000000000000000000000ffffffffffffffffffffffffffffffff16600160801b6001600160781b038316021784556106e87f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686846107a6565b846001600160a01b03167fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a8360405161072391815260200190565b60405180910390a25050505050565b600081815b845181101561079e57600085828151811061075457610754610b6b565b6020026020010151905080831161077a576000838152602082905260409020925061078b565b600081815260208490526040902092505b508061079681610b81565b915050610737565b509392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261082690849061082b565b505050565b6000610880826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166109109092919063ffffffff16565b805190915015610826578080602001905181019061089e9190610b9c565b6108265760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161023b565b606061056c8484600085856001600160a01b0385163b6109725760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161023b565b600080866001600160a01b0316858760405161098e9190610bee565b60006040518083038185875af1925050503d80600081146109cb576040519150601f19603f3d011682016040523d82523d6000602084013e6109d0565b606091505b50915091506109e08282866109eb565b979650505050505050565b606083156109fa575081610585565b825115610a0a5782518084602001fd5b8160405162461bcd60e51b815260040161023b9190610c0a565b80356001600160a01b0381168114610a3b57600080fd5b919050565b600060208284031215610a5257600080fd5b61058582610a24565b60008060008060608587031215610a7157600080fd5b610a7a85610a24565b935060208501359250604085013567ffffffffffffffff80821115610a9e57600080fd5b818701915087601f830112610ab257600080fd5b813581811115610ac157600080fd5b8860208260051b8501011115610ad657600080fd5b95989497505060200194505050565b634e487b7160e01b600052601160045260246000fd5b600082821015610b0d57610b0d610ae5565b500390565b6000816000190483118215151615610b2c57610b2c610ae5565b500290565b600082610b4e57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610b6657610b66610ae5565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610b9557610b95610ae5565b5060010190565b600060208284031215610bae57600080fd5b8151801515811461058557600080fd5b60005b83811015610bd9578181015183820152602001610bc1565b83811115610be8576000848401525b50505050565b60008251610c00818460208701610bbe565b9190910192915050565b6020815260008251806020840152610c29816040850160208701610bbe565b601f01601f1916919091016040019291505056fea2646970667358221220b45c5144c8a27a1f0a08cfc302ddb06effb50968b07065ec9f1b261f78250fab64736f6c63430008090033";

type RetroactiveVestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RetroactiveVestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RetroactiveVesting__factory extends ContractFactory {
  constructor(...args: RetroactiveVestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RetroactiveVesting";
  }

  deploy(
    token_: string,
    merkleRoot_: BytesLike,
    startTimestamp_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RetroactiveVesting> {
    return super.deploy(
      token_,
      merkleRoot_,
      startTimestamp_,
      overrides || {}
    ) as Promise<RetroactiveVesting>;
  }
  getDeployTransaction(
    token_: string,
    merkleRoot_: BytesLike,
    startTimestamp_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      token_,
      merkleRoot_,
      startTimestamp_,
      overrides || {}
    );
  }
  attach(address: string): RetroactiveVesting {
    return super.attach(address) as RetroactiveVesting;
  }
  connect(signer: Signer): RetroactiveVesting__factory {
    return super.connect(signer) as RetroactiveVesting__factory;
  }
  static readonly contractName: "RetroactiveVesting";
  public readonly contractName: "RetroactiveVesting";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RetroactiveVestingInterface {
    return new utils.Interface(_abi) as RetroactiveVestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RetroactiveVesting {
    return new Contract(address, _abi, signerOrProvider) as RetroactiveVesting;
  }
}

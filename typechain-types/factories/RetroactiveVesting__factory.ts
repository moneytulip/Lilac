/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RetroactiveVesting,
  RetroactiveVestingInterface,
} from "../RetroactiveVesting";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "startTimestamp_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [],
    name: "DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "verifyAndClaimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "vestedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "vestings",
    outputs: [
      {
        internalType: "bool",
        name: "isVerified",
        type: "bool",
      },
      {
        internalType: "uint120",
        name: "totalAmount",
        type: "uint120",
      },
      {
        internalType: "uint120",
        name: "released",
        type: "uint120",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051610ddc380380610ddc83398101604081905261002f91610165565b6001600160a01b03831661008a5760405162461bcd60e51b815260206004820152601660248201527f746f6b656e5f2063616e6e6f7420626520656d7074790000000000000000000060448201526064015b60405180910390fd5b8160001a60f81b7fff00000000000000000000000000000000000000000000000000000000000000166100ff5760405162461bcd60e51b815260206004820152601b60248201527f6d65726b6c65526f6f745f2063616e6e6f7420626520656d70747900000000006044820152606401610081565b8061014c5760405162461bcd60e51b815260206004820152601b60248201527f737461727454696d657374616d705f2063616e6e6f74206265203000000000006044820152606401610081565b6001600160a01b0390921660805260a05260c0526101a8565b60008060006060848603121561017a57600080fd5b83516001600160a01b038116811461019157600080fd5b602085015160409095015190969495509392505050565b60805160a05160c051610bea6101f2600039600081816101760152818161026f01526105a101526000818160b001526103bd01526000818161019d01526106710152610bea6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063d279c1911161005b578063d279c191146100fa578063daf498631461010d578063e6fd48bc14610171578063fc0c546a1461019857600080fd5b80631be052891461008d5780632eb4a7ab146100ab578063384711cc146100d2578063935fe8c8146100e5575b600080fd5b6100986303bfc40081565b6040519081526020015b60405180910390f35b6100987f000000000000000000000000000000000000000000000000000000000000000081565b6100986100e03660046109b7565b6101d7565b6100f86100f33660046109d2565b61029e565b005b6100f86101083660046109b7565b610471565b61014a61011b3660046109b7565b60006020819052908152604090205460ff8116906001600160781b036101008204811691600160801b90041683565b6040805193151584526001600160781b0392831660208501529116908201526060016100a2565b6100987f000000000000000000000000000000000000000000000000000000000000000081565b6101bf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100a2565b6001600160a01b03811660009081526020819052604081205460ff166102385760405162461bcd60e51b81526020600482015260116024820152701b5d5cdd081d995c9a599e48199a5c9cdd607a1b60448201526064015b60405180910390fd5b6001600160a01b038216600090815260208190526040902054610298906001600160781b036101008204811691600160801b9004167f00000000000000000000000000000000000000000000000000000000000000006303bfc4006104ea565b92915050565b6000831180156102b457506001600160781b0383105b6103265760405162461bcd60e51b815260206004820152603860248201527f746f74616c416d6f756e742063616e6e6f742062652030206f72206c6172676560448201527f72207468616e206d61782075696e743132302076616c75650000000000000000606482015260840161022f565b6001600160a01b0384166000908152602081905260409020805460ff16610461576040516bffffffffffffffffffffffff19606087901b166020820152603481018590526000906054016040516020818303038152906040528051906020012090506103e88484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f0000000000000000000000000000000000000000000000000000000000000000925085915061054d9050565b6104345760405162461bcd60e51b815260206004820152601c60248201527f636f756c64206e6f7420766572696679206d65726b6c6550726f6f6600000000604482015260640161022f565b5080546001600160781b038516610100026fffffffffffffffffffffffffffffffff199091161760011781555b61046a85610565565b5050505050565b6001600160a01b0381166104825750335b6001600160a01b03811660009081526020819052604090205460ff166104de5760405162461bcd60e51b81526020600482015260116024820152701b5d5cdd081d995c9a599e48199a5c9cdd607a1b604482015260640161022f565b6104e781610565565b50565b600042838110156104ff576000915050610545565b600061050b8583610a72565b9050600084821061051d575086610535565b84610528838a610a89565b6105329190610aa8565b90505b61053f8782610a72565b93505050505b949350505050565b60008261055a85846106ea565b1490505b9392505050565b6001600160a01b0381166000908152602081905260408120805490916001600160781b03600160801b83048116926105ca9161010090910416837f00000000000000000000000000000000000000000000000000000000000000006303bfc4006104ea565b905060006105d88383610aca565b90506001600160781b0381106106425760405162461bcd60e51b815260206004820152602960248201527f6e657752656c656173656420697320746f6f2062696720746f206265206361736044820152680742075696e743132360bc1b606482015260840161022f565b83546effffffffffffffffffffffffffffff60801b1916600160801b6001600160781b038316021784556106a07f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316868461075e565b846001600160a01b03167fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a836040516106db91815260200190565b60405180910390a25050505050565b600081815b845181101561075657600085828151811061070c5761070c610ae2565b602002602001015190508083116107325760008381526020829052604090209250610743565b600081815260208490526040902092505b508061074e81610af8565b9150506106ef565b509392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526107b09084906107b5565b505050565b600061080a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108879092919063ffffffff16565b8051909150156107b057808060200190518101906108289190610b13565b6107b05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161022f565b60606105458484600085856001600160a01b0385163b6108e95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161022f565b600080866001600160a01b031685876040516109059190610b65565b60006040518083038185875af1925050503d8060008114610942576040519150601f19603f3d011682016040523d82523d6000602084013e610947565b606091505b5091509150610957828286610962565b979650505050505050565b6060831561097157508161055e565b8251156109815782518084602001fd5b8160405162461bcd60e51b815260040161022f9190610b81565b80356001600160a01b03811681146109b257600080fd5b919050565b6000602082840312156109c957600080fd5b61055e8261099b565b600080600080606085870312156109e857600080fd5b6109f18561099b565b935060208501359250604085013567ffffffffffffffff80821115610a1557600080fd5b818701915087601f830112610a2957600080fd5b813581811115610a3857600080fd5b8860208260051b8501011115610a4d57600080fd5b95989497505060200194505050565b634e487b7160e01b600052601160045260246000fd5b600082821015610a8457610a84610a5c565b500390565b6000816000190483118215151615610aa357610aa3610a5c565b500290565b600082610ac557634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610add57610add610a5c565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610b0c57610b0c610a5c565b5060010190565b600060208284031215610b2557600080fd5b8151801515811461055e57600080fd5b60005b83811015610b50578181015183820152602001610b38565b83811115610b5f576000848401525b50505050565b60008251610b77818460208701610b35565b9190910192915050565b6020815260008251806020840152610ba0816040850160208701610b35565b601f01601f1916919091016040019291505056fea26469706673582212209f0c1e5d2c710417eb18b7299cd4a249d45603e8fe0dd72863fadd1b3565538264736f6c63430008090033";

type RetroactiveVestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RetroactiveVestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RetroactiveVesting__factory extends ContractFactory {
  constructor(...args: RetroactiveVestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RetroactiveVesting";
  }

  deploy(
    token_: string,
    merkleRoot_: BytesLike,
    startTimestamp_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RetroactiveVesting> {
    return super.deploy(
      token_,
      merkleRoot_,
      startTimestamp_,
      overrides || {}
    ) as Promise<RetroactiveVesting>;
  }
  getDeployTransaction(
    token_: string,
    merkleRoot_: BytesLike,
    startTimestamp_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      token_,
      merkleRoot_,
      startTimestamp_,
      overrides || {}
    );
  }
  attach(address: string): RetroactiveVesting {
    return super.attach(address) as RetroactiveVesting;
  }
  connect(signer: Signer): RetroactiveVesting__factory {
    return super.connect(signer) as RetroactiveVesting__factory;
  }
  static readonly contractName: "RetroactiveVesting";
  public readonly contractName: "RetroactiveVesting";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RetroactiveVestingInterface {
    return new utils.Interface(_abi) as RetroactiveVestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RetroactiveVesting {
    return new Contract(address, _abi, signerOrProvider) as RetroactiveVesting;
  }
}

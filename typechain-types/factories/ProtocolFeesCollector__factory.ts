/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProtocolFeesCollector,
  ProtocolFeesCollectorInterface,
} from "../ProtocolFeesCollector";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "_vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFlashLoanFeePercentage",
        type: "uint256",
      },
    ],
    name: "FlashLoanFeePercentageChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newSwapFeePercentage",
        type: "uint256",
      },
    ],
    name: "SwapFeePercentageChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "getActionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuthorizer",
    outputs: [
      {
        internalType: "contract IAuthorizer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getCollectedFeeAmounts",
    outputs: [
      {
        internalType: "uint256[]",
        name: "feeAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFlashLoanFeePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSwapFeePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFlashLoanFeePercentage",
        type: "uint256",
      },
    ],
    name: "setFlashLoanFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newSwapFeePercentage",
        type: "uint256",
      },
    ],
    name: "setSwapFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawCollectedFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610e63380380610e6383398101604081905261002f91610049565b3060805260016000556001600160a01b031660a052610079565b60006020828403121561005b57600080fd5b81516001600160a01b038116811461007257600080fd5b9392505050565b60805160a051610dbe6100a56000396000818161015a01526105d5015260006103270152610dbe6000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063851c1bb311610076578063d877845c1161005b578063d877845c1461012d578063e42abf3514610135578063fbfa77cf1461015557600080fd5b8063851c1bb3146100fa578063aaabadc51461010d57600080fd5b806338e9922e146100a857806355c67628146100bd5780636b6b9f69146100d45780636daefab6146100e7575b600080fd5b6100bb6100b63660046109e6565b61017c565b005b6001545b6040519081526020015b60405180910390f35b6100bb6100e23660046109e6565b6101d7565b6100bb6100f5366004610a60565b61022a565b6100c1610108366004610ae4565b610323565b6101156103a0565b6040516001600160a01b0390911681526020016100cb565b6002546100c1565b610148610143366004610b4c565b6103af565b6040516100cb9190610c11565b6101157f000000000000000000000000000000000000000000000000000000000000000081565b6101846104e4565b61019b6706f05b59d3b2000082111561025861052d565b60018190556040518181527fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc906020015b60405180910390a150565b6101df6104e4565b6101f5662386f26fc1000082111561025961052d565b60028190556040518181527f5a0b7386237e7f07fa741efc64e59c9387d2cccafec760efed4d53387f20e19a906020016101cc565b600260005414156102825760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260005561028f6104e4565b610299848361053f565b60005b848110156103165760008686838181106102b8576102b8610c55565b90506020020160208101906102cd9190610c6b565b905060008585848181106102e3576102e3610c55565b6020029190910135915061030390506001600160a01b038316858361054c565b50508061030f90610c88565b905061029c565b5050600160005550505050565b60007f0000000000000000000000000000000000000000000000000000000000000000826040516020016103839291909182527fffffffff0000000000000000000000000000000000000000000000000000000016602082015260240190565b604051602081830303815290604052805190602001209050919050565b60006103aa6105d1565b905090565b6060815167ffffffffffffffff8111156103cb576103cb610b26565b6040519080825280602002602001820160405280156103f4578160200160208202803683370190505b50905060005b82518110156104de5782818151811061041557610415610c55565b60209081029190910101516040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561047957600080fd5b505afa15801561048d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b19190610cb1565b8282815181106104c3576104c3610c55565b60209081029190910101526104d781610c88565b90506103fa565b50919050565b60006105136000357fffffffff0000000000000000000000000000000000000000000000000000000016610323565b905061052a6105228233610664565b61019161052d565b50565b8161053b5761053b81610716565b5050565b61053b818314606761052d565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526105cc908490610769565b505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b15801561062c57600080fd5b505afa158015610640573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103aa9190610cca565b600061066e6105d1565b6040517f9be2a884000000000000000000000000000000000000000000000000000000008152600481018590526001600160a01b0384811660248301523060448301529190911690639be2a8849060640160206040518083038186803b1580156106d757600080fd5b505afa1580156106eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070f9190610ce7565b9392505050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b60006107be826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661084e9092919063ffffffff16565b8051909150156105cc57808060200190518101906107dc9190610ce7565b6105cc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610279565b606061085d8484600085610865565b949350505050565b6060824710156108dd5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610279565b6001600160a01b0385163b6109345760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610279565b600080866001600160a01b031685876040516109509190610d39565b60006040518083038185875af1925050503d806000811461098d576040519150601f19603f3d011682016040523d82523d6000602084013e610992565b606091505b50915091506109a28282866109ad565b979650505050505050565b606083156109bc57508161070f565b8251156109cc5782518084602001fd5b8160405162461bcd60e51b81526004016102799190610d55565b6000602082840312156109f857600080fd5b5035919050565b60008083601f840112610a1157600080fd5b50813567ffffffffffffffff811115610a2957600080fd5b6020830191508360208260051b8501011115610a4457600080fd5b9250929050565b6001600160a01b038116811461052a57600080fd5b600080600080600060608688031215610a7857600080fd5b853567ffffffffffffffff80821115610a9057600080fd5b610a9c89838a016109ff565b90975095506020880135915080821115610ab557600080fd5b50610ac2888289016109ff565b9094509250506040860135610ad681610a4b565b809150509295509295909350565b600060208284031215610af657600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461070f57600080fd5b634e487b7160e01b600052604160045260246000fd5b8035610b4781610a4b565b919050565b60006020808385031215610b5f57600080fd5b823567ffffffffffffffff80821115610b7757600080fd5b818501915085601f830112610b8b57600080fd5b813581811115610b9d57610b9d610b26565b8060051b604051601f19603f83011681018181108582111715610bc257610bc2610b26565b604052918252848201925083810185019188831115610be057600080fd5b938501935b82851015610c0557610bf685610b3c565b84529385019392850192610be5565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610c4957835183529284019291840191600101610c2d565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610c7d57600080fd5b813561070f81610a4b565b6000600019821415610caa57634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215610cc357600080fd5b5051919050565b600060208284031215610cdc57600080fd5b815161070f81610a4b565b600060208284031215610cf957600080fd5b8151801515811461070f57600080fd5b60005b83811015610d24578181015183820152602001610d0c565b83811115610d33576000848401525b50505050565b60008251610d4b818460208701610d09565b9190910192915050565b6020815260008251806020840152610d74816040850160208701610d09565b601f01601f1916919091016040019291505056fea2646970667358221220604acad5353a96d8d71ad3bc1d47394d4f57a2640e80b9e04c072682b0fa59a364736f6c63430008090033";

type ProtocolFeesCollectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProtocolFeesCollectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProtocolFeesCollector__factory extends ContractFactory {
  constructor(...args: ProtocolFeesCollectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ProtocolFeesCollector";
  }

  deploy(
    _vault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProtocolFeesCollector> {
    return super.deploy(
      _vault,
      overrides || {}
    ) as Promise<ProtocolFeesCollector>;
  }
  getDeployTransaction(
    _vault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_vault, overrides || {});
  }
  attach(address: string): ProtocolFeesCollector {
    return super.attach(address) as ProtocolFeesCollector;
  }
  connect(signer: Signer): ProtocolFeesCollector__factory {
    return super.connect(signer) as ProtocolFeesCollector__factory;
  }
  static readonly contractName: "ProtocolFeesCollector";
  public readonly contractName: "ProtocolFeesCollector";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProtocolFeesCollectorInterface {
    return new utils.Interface(_abi) as ProtocolFeesCollectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProtocolFeesCollector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ProtocolFeesCollector;
  }
}

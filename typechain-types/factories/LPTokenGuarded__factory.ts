/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LPTokenGuarded,
  LPTokenGuardedInterface,
} from "../LPTokenGuarded";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mintedAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swap",
    outputs: [
      {
        internalType: "contract ISwapGuarded",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200198938038062001989833981016040819052620000349162000293565b8251839083906200004d90600390602085019062000120565b5080516200006390600490602084019062000120565b505050620000806200007a620000ca60201b60201c565b620000ce565b6006805460ff60a01b1916600160a01b60ff841602179055620000a03390565b600680546001600160a01b0319166001600160a01b03929092169190911790555062000355915050565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200012e9062000318565b90600052602060002090601f0160209004810192826200015257600085556200019d565b82601f106200016d57805160ff19168380011785556200019d565b828001600101855582156200019d579182015b828111156200019d57825182559160200191906001019062000180565b50620001ab929150620001af565b5090565b5b80821115620001ab5760008155600101620001b0565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001ee57600080fd5b81516001600160401b03808211156200020b576200020b620001c6565b604051601f8301601f19908116603f01168101908282118183101715620002365762000236620001c6565b816040528381526020925086838588010111156200025357600080fd5b600091505b8382101562000277578582018301518183018401529082019062000258565b83821115620002895760008385830101525b9695505050505050565b600080600060608486031215620002a957600080fd5b83516001600160401b0380821115620002c157600080fd5b620002cf87838801620001dc565b94506020860151915080821115620002e657600080fd5b50620002f586828701620001dc565b925050604084015160ff811681146200030d57600080fd5b809150509250925092565b600181811c908216806200032d57607f821691505b602082108114156200034f57634e487b7160e01b600052602260045260246000fd5b50919050565b61162480620003656000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c806370a08231116100cd57806395d89b4111610081578063a9059cbb11610066578063a9059cbb146102e2578063dd62ed3e146102f5578063f2fde38b1461032e57600080fd5b806395d89b41146102c7578063a457c2d7146102cf57600080fd5b806379cc6790116100b257806379cc6790146102785780638119c0651461028b5780638da5cb5b146102b657600080fd5b806370a0823114610247578063715018a61461027057600080fd5b8063313ce5671161012457806342966c681161010957806342966c68146101ff578063641ce140146102145780636ef0d8551461022757600080fd5b8063313ce567146101bc57806339509351146101ec57600080fd5b806306fdde0314610156578063095ea7b31461017457806318160ddd1461019757806323b872dd146101a9575b600080fd5b61015e610341565b60405161016b91906112df565b60405180910390f35b610187610182366004611349565b6103d3565b604051901515815260200161016b565b6002545b60405190815260200161016b565b6101876101b7366004611375565b6103eb565b60065474010000000000000000000000000000000000000000900460ff1660405160ff909116815260200161016b565b6101876101fa366004611349565b61040f565b61021261020d3660046113b6565b61044e565b005b6102126102223660046113cf565b61045b565b61019b61023536600461145b565b60076020526000908152604090205481565b61019b61025536600461145b565b6001600160a01b031660009081526020819052604090205490565b61021261093e565b610212610286366004611349565b6109a4565b60065461029e906001600160a01b031681565b6040516001600160a01b03909116815260200161016b565b6005546001600160a01b031661029e565b61015e6109bd565b6101876102dd366004611349565b6109cc565b6101876102f0366004611349565b610a76565b61019b610303366004611478565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61021261033c36600461145b565b610a84565b606060038054610350906114b1565b80601f016020809104026020016040519081016040528092919081815260200182805461037c906114b1565b80156103c95780601f1061039e576101008083540402835291602001916103c9565b820191906000526020600020905b8154815290600101906020018083116103ac57829003601f168201915b5050505050905090565b6000336103e1818585610b63565b5060019392505050565b6000336103f9858285610cbc565b610404858585610d48565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906103e19082908690610449908790611502565b610b63565b6104583382610f6a565b50565b6005546001600160a01b031633146104ba5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b826105075760405162461bcd60e51b815260206004820152600b60248201527f616d6f756e74203d3d203000000000000000000000000000000000000000000060448201526064016104b1565b600660009054906101000a90046001600160a01b03166001600160a01b031663202496836040518163ffffffff1660e01b815260040160206040518083038186803b15801561055557600080fd5b505afa158015610569573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058d919061151a565b1561092e57600654604080517fc5eff3d000000000000000000000000000000000000000000000000000000000815290516000926001600160a01b03169163c5eff3d0916004808301926020929190829003018186803b1580156105f057600080fd5b505afa158015610604573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610628919061153c565b6040517f9c8d8dea0000000000000000000000000000000000000000000000000000000081529091506001600160a01b03821690639c8d8dea9061067490889087908790600401611559565b602060405180830381600087803b15801561068e57600080fd5b505af11580156106a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c6919061151a565b6107125760405162461bcd60e51b815260206004820152601460248201527f496e76616c6964206d65726b6c652070726f6f6600000000000000000000000060448201526064016104b1565b6001600160a01b03851660009081526007602052604081205461073590866110f3565b6006546040517feb88f73e0000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015291925083169063eb88f73e9060240160206040518083038186803b15801561079557600080fd5b505afa1580156107a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cd91906115be565b81111561081c5760405162461bcd60e51b815260206004820152601560248201527f6163636f756e74206465706f736974206c696d6974000000000000000000000060448201526064016104b1565b6006546040517f945f18380000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201529083169063945f18389060240160206040518083038186803b15801561087a57600080fd5b505afa15801561088e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b291906115be565b6108c5866108bf60025490565b906110f3565b11156109135760405162461bcd60e51b815260206004820152601760248201527f706f6f6c20746f74616c20737570706c79206c696d697400000000000000000060448201526064016104b1565b6001600160a01b038616600090815260076020526040902055505b6109388484611106565b50505050565b6005546001600160a01b031633146109985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b1565b6109a260006111f1565b565b6109af823383610cbc565b6109b98282610f6a565b5050565b606060048054610350906114b1565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919083811015610a695760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016104b1565b6104048286868403610b63565b6000336103e1818585610d48565b6005546001600160a01b03163314610ade5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b1565b6001600160a01b038116610b5a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104b1565b610458816111f1565b6001600160a01b038316610bde5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104b1565b6001600160a01b038216610c5a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016104b1565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146109385781811015610d3b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104b1565b6109388484848403610b63565b6001600160a01b038316610dc45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016104b1565b6001600160a01b038216610e405760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016104b1565b610e4b83838361125b565b6001600160a01b03831660009081526020819052604090205481811015610eda5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016104b1565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610f11908490611502565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610f5d91815260200190565b60405180910390a3610938565b6001600160a01b038216610fe65760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016104b1565b610ff28260008361125b565b6001600160a01b038216600090815260208190526040902054818110156110815760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016104b1565b6001600160a01b03831660009081526020819052604081208383039055600280548492906110b09084906115d7565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610caf565b60006110ff8284611502565b9392505050565b6001600160a01b03821661115c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104b1565b6111686000838361125b565b806002600082825461117a9190611502565b90915550506001600160a01b038216600090815260208190526040812080548392906111a7908490611502565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6006546040517fc00c125c0000000000000000000000000000000000000000000000000000000081526001600160a01b038481166004830152602482018490529091169063c00c125c90604401600060405180830381600087803b1580156112c257600080fd5b505af11580156112d6573d6000803e3d6000fd5b50505050505050565b600060208083528351808285015260005b8181101561130c578581018301518582016040015282016112f0565b8181111561131e576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b038116811461045857600080fd5b6000806040838503121561135c57600080fd5b823561136781611334565b946020939093013593505050565b60008060006060848603121561138a57600080fd5b833561139581611334565b925060208401356113a581611334565b929592945050506040919091013590565b6000602082840312156113c857600080fd5b5035919050565b600080600080606085870312156113e557600080fd5b84356113f081611334565b935060208501359250604085013567ffffffffffffffff8082111561141457600080fd5b818701915087601f83011261142857600080fd5b81358181111561143757600080fd5b8860208260051b850101111561144c57600080fd5b95989497505060200194505050565b60006020828403121561146d57600080fd5b81356110ff81611334565b6000806040838503121561148b57600080fd5b823561149681611334565b915060208301356114a681611334565b809150509250929050565b600181811c908216806114c557607f821691505b602082108114156114e657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611515576115156114ec565b500190565b60006020828403121561152c57600080fd5b815180151581146110ff57600080fd5b60006020828403121561154e57600080fd5b81516110ff81611334565b6001600160a01b03841681526040602082015281604082015260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156115a157600080fd5b8260051b8085606085013760009201606001918252509392505050565b6000602082840312156115d057600080fd5b5051919050565b6000828210156115e9576115e96114ec565b50039056fea2646970667358221220a5326a4547dbb07c2d835e3e82c065ef81e5ab14fd938098687e271a0d6a2d4f64736f6c63430008090033";

type LPTokenGuardedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LPTokenGuardedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LPTokenGuarded__factory extends ContractFactory {
  constructor(...args: LPTokenGuardedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "LPTokenGuarded";
  }

  deploy(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LPTokenGuarded> {
    return super.deploy(
      name_,
      symbol_,
      decimals_,
      overrides || {}
    ) as Promise<LPTokenGuarded>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      overrides || {}
    );
  }
  attach(address: string): LPTokenGuarded {
    return super.attach(address) as LPTokenGuarded;
  }
  connect(signer: Signer): LPTokenGuarded__factory {
    return super.connect(signer) as LPTokenGuarded__factory;
  }
  static readonly contractName: "LPTokenGuarded";
  public readonly contractName: "LPTokenGuarded";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LPTokenGuardedInterface {
    return new utils.Interface(_abi) as LPTokenGuardedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LPTokenGuarded {
    return new Contract(address, _abi, signerOrProvider) as LPTokenGuarded;
  }
}

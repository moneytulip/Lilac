/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SwapDeployer, SwapDeployerInterface } from "../SwapDeployer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "cloneAddress",
        type: "address",
      },
    ],
    name: "NewClone",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "swapAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20[]",
        name: "pooledTokens",
        type: "address[]",
      },
    ],
    name: "NewSwapPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "clone",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "swapAddress",
        type: "address",
      },
      {
        internalType: "contract IERC20[]",
        name: "_pooledTokens",
        type: "address[]",
      },
      {
        internalType: "uint8[]",
        name: "decimals",
        type: "uint8[]",
      },
      {
        internalType: "string",
        name: "lpTokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "lpTokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_adminFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "lpTokenTargetAddress",
        type: "address",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "metaSwapAddress",
        type: "address",
      },
      {
        internalType: "contract IERC20[]",
        name: "_pooledTokens",
        type: "address[]",
      },
      {
        internalType: "uint8[]",
        name: "decimals",
        type: "uint8[]",
      },
      {
        internalType: "string",
        name: "lpTokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "lpTokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_adminFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "lpTokenTargetAddress",
        type: "address",
      },
      {
        internalType: "contract ISwap",
        name: "baseSwap",
        type: "address",
      },
    ],
    name: "deployMetaSwap",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610cf28061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c80638da5cb5b116100505780638da5cb5b146100c3578063e0ec68b7146100d4578063f2fde38b146100e757600080fd5b80630e64a45e14610077578063715018a6146100a65780638124b78e146100b0575b600080fd5b61008a6100853660046108b5565b6100fa565b6040516001600160a01b03909116815260200160405180910390f35b6100ae610271565b005b61008a6100be3660046109a1565b6102dc565b6000546001600160a01b031661008a565b61008a6100e23660046109c5565b610332565b6100ae6100f53660046109a1565b6104ac565b6000806101068b61058e565b6040517fb28cb6dc0000000000000000000000000000000000000000000000000000000081529091506001600160a01b0382169063b28cb6dc9061015c908d908d908d908d908d908d908d908d90600401610b87565b600060405180830381600087803b15801561017657600080fd5b505af115801561018a573d6000803e3d6000fd5b50505050806001600160a01b031663f2fde38b6101af6000546001600160a01b031690565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b15801561020857600080fd5b505af115801561021c573d6000803e3d6000fd5b50505050336001600160a01b03167f0838512b7934222cec571cf3fde1cf3e9e864bbc431bd5d1ef4d9ed3079093d9828c60405161025b929190610c08565b60405180910390a29a9950505050505050505050565b6000546001600160a01b031633146102d05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6102da600061059f565b565b6000806102e88361058e565b6040516001600160a01b038083168252919250908416907f3bf919a220a0f12ddcaf77fd06ffa4b9c728617774936f0d78b452010319c8249060200160405180910390a292915050565b60008061033e8c61058e565b6040517f118e1c770000000000000000000000000000000000000000000000000000000081529091506001600160a01b0382169063118e1c7790610396908e908e908e908e908e908e908e908e908e90600401610c32565b600060405180830381600087803b1580156103b057600080fd5b505af11580156103c4573d6000803e3d6000fd5b50505050806001600160a01b031663f2fde38b6103e96000546001600160a01b031690565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b15801561044257600080fd5b505af1158015610456573d6000803e3d6000fd5b50505050336001600160a01b03167f0838512b7934222cec571cf3fde1cf3e9e864bbc431bd5d1ef4d9ed3079093d9828d604051610495929190610c08565b60405180910390a29b9a5050505050505050505050565b6000546001600160a01b031633146105065760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c7565b6001600160a01b0381166105825760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102c7565b61058b8161059f565b50565b600061059982610607565b92915050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f09150506001600160a01b0381166106bd5760405162461bcd60e51b815260206004820152601660248201527f455243313136373a20637265617465206661696c65640000000000000000000060448201526064016102c7565b919050565b6001600160a01b038116811461058b57600080fd5b80356106bd816106c2565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561073a5761073a6106e2565b604052919050565b600067ffffffffffffffff82111561075c5761075c6106e2565b5060051b60200190565b600082601f83011261077757600080fd5b8135602061078c61078783610742565b610711565b82815260059290921b840181019181810190868411156107ab57600080fd5b8286015b848110156107cf5780356107c2816106c2565b83529183019183016107af565b509695505050505050565b600082601f8301126107eb57600080fd5b813560206107fb61078783610742565b82815260059290921b8401810191818101908684111561081a57600080fd5b8286015b848110156107cf57803560ff811681146108385760008081fd5b835291830191830161081e565b600082601f83011261085657600080fd5b813567ffffffffffffffff811115610870576108706106e2565b610883601f8201601f1916602001610711565b81815284602083860101111561089857600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060008060006101208a8c0312156108d457600080fd5b6108dd8a6106d7565b985060208a013567ffffffffffffffff808211156108fa57600080fd5b6109068d838e01610766565b995060408c013591508082111561091c57600080fd5b6109288d838e016107da565b985060608c013591508082111561093e57600080fd5b61094a8d838e01610845565b975060808c013591508082111561096057600080fd5b5061096d8c828d01610845565b95505060a08a0135935060c08a0135925060e08a013591506109926101008b016106d7565b90509295985092959850929598565b6000602082840312156109b357600080fd5b81356109be816106c2565b9392505050565b6000806000806000806000806000806101408b8d0312156109e557600080fd5b6109ee8b6106d7565b995060208b013567ffffffffffffffff80821115610a0b57600080fd5b610a178e838f01610766565b9a5060408d0135915080821115610a2d57600080fd5b610a398e838f016107da565b995060608d0135915080821115610a4f57600080fd5b610a5b8e838f01610845565b985060808d0135915080821115610a7157600080fd5b50610a7e8d828e01610845565b96505060a08b0135945060c08b0135935060e08b01359250610aa36101008c016106d7565b9150610ab26101208c016106d7565b90509295989b9194979a5092959850565b600081518084526020808501945080840160005b83811015610afc5781516001600160a01b031687529582019590820190600101610ad7565b509495945050505050565b600081518084526020808501945080840160005b83811015610afc57815160ff1687529582019590820190600101610b1b565b6000815180845260005b81811015610b6057602081850181015186830182015201610b44565b81811115610b72576000602083870101525b50601f01601f19169290920160200192915050565b6000610100808352610b9b8184018c610ac3565b90508281036020840152610baf818b610b07565b90508281036040840152610bc3818a610b3a565b90508281036060840152610bd78189610b3a565b9150508560808301528460a08301528360c08301526001600160a01b03831660e08301529998505050505050505050565b6001600160a01b0383168152604060208201526000610c2a6040830184610ac3565b949350505050565b6000610120808352610c468184018d610ac3565b90508281036020840152610c5a818c610b07565b90508281036040840152610c6e818b610b3a565b90508281036060840152610c82818a610b3a565b6080840198909852505060a081019490945260c08401929092526001600160a01b0390811660e0840152166101009091015294935050505056fea264697066735822122088d1c84d2f1949d7511ef1656a2f3db1bf946bbf0bfdc4ead8e5af18fa742ce964736f6c63430008090033";

type SwapDeployerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapDeployerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapDeployer__factory extends ContractFactory {
  constructor(...args: SwapDeployerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SwapDeployer";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SwapDeployer> {
    return super.deploy(overrides || {}) as Promise<SwapDeployer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SwapDeployer {
    return super.attach(address) as SwapDeployer;
  }
  connect(signer: Signer): SwapDeployer__factory {
    return super.connect(signer) as SwapDeployer__factory;
  }
  static readonly contractName: "SwapDeployer";
  public readonly contractName: "SwapDeployer";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapDeployerInterface {
    return new utils.Interface(_abi) as SwapDeployerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapDeployer {
    return new Contract(address, _abi, signerOrProvider) as SwapDeployer;
  }
}

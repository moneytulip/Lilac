/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SwapDeployer, SwapDeployerInterface } from "../SwapDeployer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "cloneAddress",
        type: "address",
      },
    ],
    name: "NewClone",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "swapAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20[]",
        name: "pooledTokens",
        type: "address[]",
      },
    ],
    name: "NewSwapPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "clone",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "swapAddress",
        type: "address",
      },
      {
        internalType: "contract IERC20[]",
        name: "_pooledTokens",
        type: "address[]",
      },
      {
        internalType: "uint8[]",
        name: "decimals",
        type: "uint8[]",
      },
      {
        internalType: "string",
        name: "lpTokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "lpTokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_adminFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "lpTokenTargetAddress",
        type: "address",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "metaSwapAddress",
        type: "address",
      },
      {
        internalType: "contract IERC20[]",
        name: "_pooledTokens",
        type: "address[]",
      },
      {
        internalType: "uint8[]",
        name: "decimals",
        type: "uint8[]",
      },
      {
        internalType: "string",
        name: "lpTokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "lpTokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_adminFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "lpTokenTargetAddress",
        type: "address",
      },
      {
        internalType: "contract ISwap",
        name: "baseSwap",
        type: "address",
      },
    ],
    name: "deployMetaSwap",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610c1c8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630e64a45e14610067578063715018a6146100965780638124b78e146100a05780638da5cb5b146100b3578063e0ec68b7146100c4578063f2fde38b146100d7575b600080fd5b61007a6100753660046107dd565b6100ea565b6040516001600160a01b03909116815260200160405180910390f35b61009e610230565b005b61007a6100ae3660046108c9565b61029b565b6000546001600160a01b031661007a565b61007a6100d23660046108ed565b6102f1565b61009e6100e53660046108c9565b61043a565b6000806100f68b610505565b604051632ca32db760e21b81529091506001600160a01b0382169063b28cb6dc90610133908d908d908d908d908d908d908d908d90600401610aaf565b600060405180830381600087803b15801561014d57600080fd5b505af1158015610161573d6000803e3d6000fd5b50505050806001600160a01b031663f2fde38b6101866000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b1580156101c757600080fd5b505af11580156101db573d6000803e3d6000fd5b50505050336001600160a01b03167f0838512b7934222cec571cf3fde1cf3e9e864bbc431bd5d1ef4d9ed3079093d9828c60405161021a929190610b30565b60405180910390a29a9950505050505050505050565b6000546001600160a01b0316331461028f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6102996000610516565b565b6000806102a783610505565b6040516001600160a01b038083168252919250908416907f3bf919a220a0f12ddcaf77fd06ffa4b9c728617774936f0d78b452010319c8249060200160405180910390a292915050565b6000806102fd8c610505565b60405163118e1c7760e01b81529091506001600160a01b0382169063118e1c779061033c908e908e908e908e908e908e908e908e908e90600401610b5c565b600060405180830381600087803b15801561035657600080fd5b505af115801561036a573d6000803e3d6000fd5b50505050806001600160a01b031663f2fde38b61038f6000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b1580156103d057600080fd5b505af11580156103e4573d6000803e3d6000fd5b50505050336001600160a01b03167f0838512b7934222cec571cf3fde1cf3e9e864bbc431bd5d1ef4d9ed3079093d9828d604051610423929190610b30565b60405180910390a29b9a5050505050505050505050565b6000546001600160a01b031633146104945760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610286565b6001600160a01b0381166104f95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610286565b61050281610516565b50565b600061051082610566565b92915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b0381166105fe5760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606401610286565b919050565b6001600160a01b038116811461050257600080fd5b80356105fe81610603565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561066257610662610623565b604052919050565b600067ffffffffffffffff82111561068457610684610623565b5060051b60200190565b600082601f83011261069f57600080fd5b813560206106b46106af8361066a565b610639565b82815260059290921b840181019181810190868411156106d357600080fd5b8286015b848110156106f75780356106ea81610603565b83529183019183016106d7565b509695505050505050565b600082601f83011261071357600080fd5b813560206107236106af8361066a565b82815260059290921b8401810191818101908684111561074257600080fd5b8286015b848110156106f757803560ff811681146107605760008081fd5b8352918301918301610746565b600082601f83011261077e57600080fd5b813567ffffffffffffffff81111561079857610798610623565b6107ab601f8201601f1916602001610639565b8181528460208386010111156107c057600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060008060006101208a8c0312156107fc57600080fd5b6108058a610618565b985060208a013567ffffffffffffffff8082111561082257600080fd5b61082e8d838e0161068e565b995060408c013591508082111561084457600080fd5b6108508d838e01610702565b985060608c013591508082111561086657600080fd5b6108728d838e0161076d565b975060808c013591508082111561088857600080fd5b506108958c828d0161076d565b95505060a08a0135935060c08a0135925060e08a013591506108ba6101008b01610618565b90509295985092959850929598565b6000602082840312156108db57600080fd5b81356108e681610603565b9392505050565b6000806000806000806000806000806101408b8d03121561090d57600080fd5b6109168b610618565b995060208b013567ffffffffffffffff8082111561093357600080fd5b61093f8e838f0161068e565b9a5060408d013591508082111561095557600080fd5b6109618e838f01610702565b995060608d013591508082111561097757600080fd5b6109838e838f0161076d565b985060808d013591508082111561099957600080fd5b506109a68d828e0161076d565b96505060a08b0135945060c08b0135935060e08b013592506109cb6101008c01610618565b91506109da6101208c01610618565b90509295989b9194979a5092959850565b600081518084526020808501945080840160005b83811015610a245781516001600160a01b0316875295820195908201906001016109ff565b509495945050505050565b600081518084526020808501945080840160005b83811015610a2457815160ff1687529582019590820190600101610a43565b6000815180845260005b81811015610a8857602081850181015186830182015201610a6c565b81811115610a9a576000602083870101525b50601f01601f19169290920160200192915050565b6000610100808352610ac38184018c6109eb565b90508281036020840152610ad7818b610a2f565b90508281036040840152610aeb818a610a62565b90508281036060840152610aff8189610a62565b6080840197909752505060a081019390935260c08301919091526001600160a01b031660e090910152949350505050565b6001600160a01b0383168152604060208201819052600090610b54908301846109eb565b949350505050565b6000610120808352610b708184018d6109eb565b90508281036020840152610b84818c610a2f565b90508281036040840152610b98818b610a62565b90508281036060840152610bac818a610a62565b6080840198909852505060a081019490945260c08401929092526001600160a01b0390811660e0840152166101009091015294935050505056fea2646970667358221220936549ecb9ec534e177c29c07654abc07e95ed8f61439a2407b3839eb6bc0e5564736f6c63430008090033";

type SwapDeployerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapDeployerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapDeployer__factory extends ContractFactory {
  constructor(...args: SwapDeployerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SwapDeployer";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SwapDeployer> {
    return super.deploy(overrides || {}) as Promise<SwapDeployer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SwapDeployer {
    return super.attach(address) as SwapDeployer;
  }
  connect(signer: Signer): SwapDeployer__factory {
    return super.connect(signer) as SwapDeployer__factory;
  }
  static readonly contractName: "SwapDeployer";
  public readonly contractName: "SwapDeployer";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapDeployerInterface {
    return new utils.Interface(_abi) as SwapDeployerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapDeployer {
    return new Contract(address, _abi, signerOrProvider) as SwapDeployer;
  }
}
